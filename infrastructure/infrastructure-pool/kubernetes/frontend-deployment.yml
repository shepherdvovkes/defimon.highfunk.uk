apiVersion: apps/v1
kind: Deployment
metadata:
  name: defimon-frontend
  namespace: defimon
  labels:
    app: defimon-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: defimon-frontend
  template:
    metadata:
      labels:
        app: defimon-frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/${GOOGLE_CLOUD_PROJECT_ID}/defimon-frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: defimon-config
              key: NODE_ENV
        - name: FRONTEND_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: defimon-config
              key: FRONTEND_DOMAIN
        - name: FRONTEND_PORT
          valueFrom:
            configMapKeyRef:
              name: defimon-config
              key: FRONTEND_PORT
        - name: ANALYTICS_API_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: defimon-config
              key: ANALYTICS_API_DOMAIN
        - name: NEXT_PUBLIC_API_BASE_URL
          value: "https://${ANALYTICS_API_DOMAIN}"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: defimon-frontend-service
  namespace: defimon
spec:
  selector:
    app: defimon-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: defimon-frontend-ingress
  namespace: defimon
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "defimon-frontend-ip"
    networking.gke.io/managed-certificates: "defimon-frontend-cert"
spec:
  rules:
  - host: ${FRONTEND_DOMAIN}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: defimon-frontend-service
            port:
              number: 80
